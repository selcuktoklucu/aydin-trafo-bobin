{"version":3,"sources":["containers/components/LanguageSelector.tsx","shared/Header.tsx","shared/autoDismissAlert.tsx","i18n.js","apiConfig.tsx","containers/components/Services.tsx","containers/components/Map.tsx","containers/ContactUs.tsx","containers/components/MainPage.tsx","auth/components/SignUp.tsx","auth/api.tsx","auth/components/SignIn.tsx","AnimationApp.tsx","App.tsx","serviceWorker.ts","redux/system/types.tsx","redux/system/reducers.tsx","index.tsx","assets/header/logo.png","assets/products/img-1-md.jpg","assets/products/img-2-md.jpg","assets/products/img-3-md.jpg","assets/pictures/lamp-trans-sm.jpg"],"names":["LanguageSelector","useTranslation","i18n","t","onChange","event","changeLanguage","target","value","type","name","defaultChecked","Header","props","authenticatedOptions","Fragment","to","unauthenticatedOptions","alwaysOptions","user","className","href","src","logo","alt","email","AutoDismissAlert","timer","handleClose","setState","show","state","this","setInterval","clearInterval","alert","Alert","dismissible","variant","onClose","Heading","title","React","Component","use","Backend","initReactI18next","init","lng","backend","loadPath","fallbackLng","debug","ns","defaultNS","keySeparator","interpolation","escapeValue","formatSeparator","react","wait","apiUrl","Services","visibleSlides","totalSlides","step","naturalSlideWidth","naturalSlideHeight","hasMasterSpinner","index","image01","image02","image03","Map","width","height","style","border","aria-hidden","ContactUs","useEffect","MainPage","image","apiUrls","window","location","hostname","SignUp","useState","setEmail","password","setPassword","passwordConfirmation","setPasswordConfirmation","onSubmit","preventDefault","credentials","fetch","method","headers","Accept","body","JSON","stringify","password_confirmation","signUp","then","console","log","res","setAlerts","alerts","catch","error","htmlFor","required","placeholder","e","Button","SignIn","history","useHistory","useDispatch","axios","url","data","signIn","setUser","toast","success","push","styles","position","left","right","top","bottom","content","fill","textAlign","nav","padding","margin","display","navItem","flex","listStyleType","hsl","color","paddingTop","fontSize","rgb","AnimationApp","useLocation","TransitionGroup","CSSTransition","key","classNames","timeout","exact","path","children","render","App","fallback","length","map","Boolean","match","UPDATE_SESSION","initialState","loggedIn","session","userName","store","createStore","action","payload","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.97892eef.chunk.js","sourcesContent":["import React from 'react'\r\nimport { useTranslation } from 'react-i18next'\r\n\r\nconst LanguageSelector = () => {\r\n  const { t, i18n } = useTranslation()\r\n\r\n  const changeLanguage = (event: any) => {\r\n    i18n.changeLanguage(event.target.value)\r\n  }\r\n\r\n  return (\r\n    <div onChange={changeLanguage}>\r\n      <input type=\"radio\" value=\"en\" name=\"language\" /> Eng\r\n      <input type=\"radio\" value=\"tr\" name=\"language\" defaultChecked /> Tr\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LanguageSelector","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport './Header.scss'\r\nimport { User } from './types'\r\nimport logo from '../assets/header/logo.png'\r\nimport LanguageSelector from '../containers/components/LanguageSelector'\r\nimport { useTranslation } from 'react-i18next'\r\n\r\ntype Props = {\r\n  user: User\r\n}\r\nconst Header: React.FC<Props> = props => {\r\n\r\n  const { t, i18n } = useTranslation()\r\n  const authenticatedOptions = (\r\n  <React.Fragment>\r\n    <Link to=\"/new-order\">Yeni Sipariş</Link>\r\n    <Link to=\"/change-password\">Parolayı Değiştir</Link>\r\n    <Link to=\"/sign-out\">Çıkış yap</Link>\r\n  </React.Fragment>\r\n)\r\n\r\nconst unauthenticatedOptions = (\r\n  <React.Fragment>\r\n    <Link to=\"/sign-in\">{t(\"customer.login.label\")}</Link>\r\n  </React.Fragment>\r\n)\r\n\r\n\r\nconst alwaysOptions = (\r\n  <React.Fragment>\r\n    <Link to=\"/\">{t(\"main-page.label\")}</Link>\r\n    <Link to=\"/technical-resources\">{t(\"technical-resources.label\")}</Link>\r\n    <Link to=\"/services\">{t(\"services.label\")}</Link>\r\n    <Link to=\"/references\">{t(\"references.label\")}</Link>\r\n    <Link to=\"/contact-us\">{t(\"contact-us.label\")}</Link>\r\n    <LanguageSelector />\r\n  </React.Fragment>\r\n)\r\n\r\n\r\n  const { user } = props\r\n  //console.log(user)\r\n  return (\r\n    <header className=\"main-header\">\r\n      <a href=\"/\">\r\n\r\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n      </a>\r\n      {/*<h4 className={\"hidden-md-down\"}>Aydın Elektro Mekanik Bobinaj</h4>*/}\r\n      <nav>\r\n        {user && <span>Hoşgeldiniz, {user.email}</span>}\r\n        {user ? authenticatedOptions : unauthenticatedOptions}\r\n        {alwaysOptions}\r\n      </nav>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport Alert, { AlertProps } from 'react-bootstrap/Alert'\r\n\r\ntype Props = {\r\n  dismissible: boolean\r\n  alert: AlertProps\r\n  onClose: () => void\r\n}\r\n\r\ninterface ComponentState {\r\n  show: boolean\r\n}\r\n\r\nclass AutoDismissAlert extends React.Component<Props, ComponentState> {\r\n  timer!: NodeJS.Timeout\r\n  constructor(props: Props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      show: true\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.timer = setInterval(() => {\r\n      this.setState({ show: false })\r\n    }, 4000)\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.timer)\r\n  }\r\n\r\n  handleClose = () => this.setState({ show: false })\r\n\r\n  render() {\r\n    const { alert } = this.props\r\n    return (\r\n      <Alert\r\n        dismissible\r\n        show={this.state.show}\r\n        variant={alert.variant}\r\n        onClose={this.handleClose}\r\n      >\r\n        <div className=\"container\">\r\n          <Alert.Heading>{alert.title}</Alert.Heading>\r\n        </div>\r\n      </Alert>\r\n    )\r\n  }\r\n}\r\n\r\nexport default AutoDismissAlert\r\n","import i18n from 'i18next'\r\n// import * as i18n from 'i18next'\r\n\r\nimport Backend from 'i18next-xhr-backend'\r\nimport { initReactI18next } from 'react-i18next'\r\n\r\ni18n\r\n  .use(Backend)\r\n  .use(initReactI18next)\r\n  .init({\r\n    lng: 'tr',\r\n    backend: {\r\n      /* translation file path */\r\n      loadPath: 'aydin-trafo-bobin/assets/i18n/{{ns}}/{{lng}}.json'\r\n    },\r\n    fallbackLng: 'en',\r\n    debug: true,\r\n    /* can have multiple namespace, in case you want to divide a huge translation into smaller pieces and load them on demand */\r\n    ns: ['translations'],\r\n    defaultNS: 'translations',\r\n    keySeparator: false,\r\n    interpolation: {\r\n      escapeValue: false,\r\n      formatSeparator: ','\r\n    },\r\n    react: {\r\n      wait: true\r\n    }\r\n  })\r\n\r\nexport default i18n","export let apiUrl: string\r\n\r\nconst apiUrls = {\r\n  development: 'http://localhost:4741',\r\n  production: 'https://dotdot-api.herokuapp.com'\r\n}\r\n\r\nif (window.location.hostname === 'localhost') {\r\n  apiUrl = apiUrls.development\r\n} else {\r\n  apiUrl = apiUrls.production\r\n}\r\n\r\nexport default apiUrl\r\n","import React from 'react'\r\n// import { History } from 'history'\r\n// import { useHistory } from 'react-router-dom'\r\nimport image01 from '../../assets/products/img-1-md.jpg'\r\nimport image02 from '../../assets/products/img-2-md.jpg'\r\nimport image03 from '../../assets/products/img-3-md.jpg'\r\nimport 'react-animated-slider/build/horizontal.css';\r\nimport { CarouselProvider, Slider, Slide, ButtonBack, ButtonNext, ImageWithZoom } from 'pure-react-carousel';\r\nimport 'pure-react-carousel/dist/react-carousel.es.css';\r\nimport './Services.scss'\r\ntype Props = {\r\n}\r\n\r\ninterface MyCompProps {\r\n\tinterval: number\r\n}\r\n\r\nconst Services: React.FC<Props> = props => {\r\n\r\n  return (\r\n    <div className=\"col m-auto py-3 services\">\r\n        <div className=\"row\">\r\n            <div className=\"col-12 col-lg-6 mx-auto \">\r\n            <CarouselProvider\r\n                visibleSlides={1}\r\n                totalSlides={3}\r\n                step={1}\r\n                naturalSlideWidth={800}\r\n                naturalSlideHeight={600}\r\n                hasMasterSpinner\r\n            >\r\n                <Slider>\r\n                    <Slide index={0}><ImageWithZoom src={image01}/></Slide>\r\n                    <Slide index={1}><ImageWithZoom src={image02}/></Slide>\r\n                    <Slide index={2}><ImageWithZoom src={image03}/></Slide>\r\n                </Slider>\r\n                <ButtonBack>Back</ButtonBack>\r\n                <ButtonNext>Next</ButtonNext>\r\n            </CarouselProvider>\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\nexport default Services\r\n","\r\nimport React from 'react';\r\n\r\nconst Map = (props: any) => {\r\n    // const [center, setCenter] = useState({lat: 39.98902860303093, lng: 32.750475149376975 });\r\nconst myStyle = {\r\n    border:0\r\n    } as React.CSSProperties;\r\n\r\n\r\n    return (\r\n        <iframe src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d9428.823383170566!2d32.74419915610201!3d39.98794554392566!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x14d34988600137db%3A0x2cff3e50e6c1767!2sAydin%20Transformer-Coil!5e0!3m2!1sen!2sus!4v1609046447114!5m2!1sen!2sus\" width=\"600\" height=\"450\" style={myStyle} aria-hidden=\"false\"></iframe>\r\n    )\r\n}\r\n\r\nexport default Map;","import React, { useEffect } from 'react'\r\n// import { History } from 'history'\r\n// import { useHistory } from 'react-router-dom'\r\n\r\n//import { signIn } from '../api'\r\n// import { Credentials, User } from '../shared/types'\r\n// import Button from 'react-bootstrap/Button'\r\n// import { AlertProps } from 'react-bootstrap/Alert'\r\n// import { default as NumberFormat } from 'react-number-format'\r\n// import { ToastContainer, toast } from 'react-toastify'\r\nimport '../containers/components/MainPage.scss'\r\n\r\nimport { useTranslation } from 'react-i18next'\r\nimport Map from './components/Map'\r\n\r\n\r\ntype Props = {\r\n}\r\ntype Suggestion = {\r\n\r\n}\r\n\r\nconst ContactUs: React.FC<Props> = props => {\r\n\r\n\r\n  const { t } = useTranslation()\r\n\r\n  useEffect(() => {}, [])\r\n\r\n  return (\r\n    <div className=\"col m-auto py-3\">\r\n        <div className=\"row\">\r\n            <div className=\"col-5 mx-auto contact-us\">\r\n                <p>\r\n                    {t(\"contact.address.label\")}{\":\"} {t(\"contact.address\")}\r\n                </p>\r\n                <p>\r\n                    {t(\"contact.telephone.label\")}{\":\"} {t(\"contact.telephone\")}\r\n                </p>\r\n                <p>\r\n                    {t(\"contact.fax.label\")}{\":\"} {t(\"contact.fax\")}\r\n                </p>\r\n                <p>\r\n                    {t(\"contact.email.label\")}{\":\"} {t(\"contact.email\")}\r\n                </p>\r\n            </div>\r\n            <div className=\"col-7 mx-auto map\">\r\n                <Map />\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\nexport default ContactUs\r\n","import React, { useState, useEffect } from 'react'\r\n// import { History } from 'history'\r\nimport { useHistory } from 'react-router-dom'\r\nimport './MainPage.scss'\r\nimport image from '../../assets/pictures/lamp-trans-sm.jpg'\r\n// import Slider from 'react-animated-slider';\r\nimport 'react-animated-slider/build/horizontal.css';\r\nimport Carousel from 'react-bootstrap/Carousel'\r\n//import { signIn } from '../api'\r\nimport { Credentials, User } from '../../shared/types'\r\nimport Button from 'react-bootstrap/Button'\r\nimport { AlertProps } from 'react-bootstrap/Alert'\r\n// import { default as NumberFormat } from 'react-number-format'\r\nimport { ToastContainer, toast } from 'react-toastify'\r\nimport { useTranslation } from 'react-i18next'\r\n\r\ntype Props = {\r\n}\r\ntype Suggestion = {\r\n\r\n}\r\n\r\ninterface MyCompProps {\r\n\tinterval: number\r\n}\r\n\r\nconst MainPage: React.FC<Props> = props => {\r\n\r\n  const cleanFields = () => {\r\n  }\r\n  const { t, i18n } = useTranslation()\r\n\r\n  const imageTransformators = \r\n  useEffect(() => {}, [])\r\n\r\n  return (\r\n    <div className=\"col m-auto py-3\">\r\n        <div className=\"row\">\r\n            <div className=\"col-md-12 col-lg-6 mx-auto\">\r\n                    <img src={image} className=\"img-main\" alt=\"logo\" />\r\n            \r\n            </div>\r\n            <div className=\"col-md-12 col-lg-6 mx-auto description\">\r\n                <h1>\r\n                    {t(\"about-us.title\")}\r\n                </h1>\r\n                <p>\r\n                    {t(\"about-us.label\")}\r\n                </p>\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\nexport default MainPage\r\n","import React, { useState } from 'react'\r\n// import { withRouter } from 'react-router-dom'\r\n\r\nimport { signUp } from '../api'\r\nimport { Credentials } from '../../shared/types'\r\nimport Button from 'react-bootstrap/Button'\r\n\r\ntype Props = {\r\n  setAlerts: any\r\n  alerts: Array<any>\r\n  setUser: any\r\n  history?: any\r\n}\r\n\r\nconst SignUp: React.FC<Props> = props => {\r\n  const [email, setEmail] = useState()\r\n  const [password, setPassword] = useState()\r\n  const [passwordConfirmation, setPasswordConfirmation] = useState()\r\n  // const [history, setHistory] = useState()\r\n  // handleChange = event =>\r\n  //   this.setState({\r\n  //     [event.target.name]: event.target.value\r\n  //   })\r\n\r\n  const onSignUp = (event: { preventDefault: () => void }) => {\r\n    event.preventDefault()\r\n    //console.log('history', history)\r\n    const credentials: Credentials = { email, password, passwordConfirmation }\r\n    signUp(credentials)\r\n      .then(() => console.log(email))\r\n      .then((res: any) => console.log(email, res))\r\n      .then(() =>\r\n        props.setAlerts([\r\n          ...props.alerts,\r\n          { title: 'Sign up Successful', variant: 'success' }\r\n        ])\r\n      )\r\n      .then(() => console.log('pro'))\r\n      .catch((error: any) => {\r\n        console.error('ERR', error)\r\n        //let variant = undefined\r\n\r\n        props.setAlerts([\r\n          ...props.alerts,\r\n          { title: 'Hello', variant: 'success' }\r\n        ])\r\n      })\r\n  }\r\n\r\n  // render() {\r\n  //   const { email, password, passwordConfirmation } = this.state\r\n\r\n  return (\r\n    <div className=\"col-md-6 m-auto py-3\">\r\n      <form className=\"auth-form\" onSubmit={onSignUp}>\r\n        <h3>Sign Up</h3>\r\n\r\n        <label htmlFor=\"email\">Email</label>\r\n        <input\r\n          required\r\n          name=\"email\"\r\n          value={email}\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n          onChange={e => setEmail(e.target.value)}\r\n        />\r\n        <label htmlFor=\"password\">Password</label>\r\n        <input\r\n          required\r\n          name=\"password\"\r\n          value={password}\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          onChange={e => setPassword(e.target.value)}\r\n        />\r\n        <label htmlFor=\"passwordConfirmation\">Confirm Password</label>\r\n        <input\r\n          required\r\n          name=\"passwordConfirmation\"\r\n          value={passwordConfirmation}\r\n          type=\"password\"\r\n          placeholder=\"Confirm Password\"\r\n          onChange={e => setPasswordConfirmation(e.target.value)}\r\n        />\r\n        <Button variant=\"primary\" type=\"submit\">\r\n          Submit\r\n        </Button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\nexport default SignUp\r\n","import { apiUrl } from '../apiConfig'\r\nimport axios from 'axios'\r\nimport { Credentials } from '../shared/types'\r\n\r\nexport const signUp = (credentials: Credentials) =>\r\n  fetch(`${apiUrl}/sign-up/`, {\r\n    method: 'Post',\r\n    headers: {\r\n      Accept: 'application/json',\r\n      'Content-Type': 'application/json',\r\n      'Accept-Language': 'ru,en;q=0.9'\r\n    },\r\n    body: JSON.stringify({\r\n      credentials: {\r\n        email: `${credentials.email}`,\r\n        password: `${credentials.password}`,\r\n        password_confirmation: `${credentials.passwordConfirmation}`\r\n      }\r\n    })\r\n  })\r\n\r\nexport const signIn = (credentials: Credentials) =>\r\n  axios({\r\n    url: apiUrl + '/sign-in',\r\n    method: 'POST',\r\n    data: {\r\n      credentials: {\r\n        email: credentials.email,\r\n        password: credentials.password\r\n      }\r\n    }\r\n  })\r\n// fetch(`${apiUrl}/sign-in/`, {\r\n//   method: 'Post',\r\n//   headers: {\r\n//     Accept: 'application/json',\r\n//     'Content-Type': 'application/json',\r\n//     'Accept-Language': 'ru,en;q=0.9'\r\n//   },\r\n//   body: JSON.stringify({\r\n//     credentials: {\r\n//       email: `${credentials.email}`,\r\n//       password: `${credentials.password}`\r\n//     }\r\n//   })\r\n// })\r\n//   return axios({\r\n//     method: 'POST',\r\n//     url: apiUrl + '/sign-up',\r\n//     headers: {\r\n//       Accept: 'application/json',\r\n//       'Content-Type': 'application/json',\r\n//       'Accept-Language': 'ru,en;q=0.9'\r\n//     },\r\n//     data: {\r\n//       credentials: {\r\n//         email: credentials.email,\r\n//         password: credentials.password,\r\n//         password_confirmation: credentials.passwordConfirmation\r\n//       }\r\n//     }\r\n//   })\r\n// }\r\n\r\n// export const signIn = credentials => {\r\n//   console.log('logininin', apiUrl + '/sign-in')\r\n//   return axios({\r\n//     url: apiUrl + '/sign-in',\r\n//     method: 'POST',\r\n//     data: {\r\n//       credentials: {\r\n//         email: credentials.email,\r\n//         password: credentials.password\r\n//       }\r\n//     }\r\n//   })\r\n// }\r\n\r\n// export const signOut = user => {\r\n//   return axios({\r\n//     url: apiUrl + '/sign-out',\r\n//     method: 'DELETE',\r\n//     headers: {\r\n//       Authorization: `Token token=${user.token}`\r\n//     }\r\n//   })\r\n// }\r\n\r\n// export const changePassword = (passwords, user) => {\r\n//   return axios({\r\n//     url: apiUrl + '/change-password',\r\n//     method: 'PATCH',\r\n//     headers: {\r\n//       Authorization: `Token token=${user.token}`\r\n//     },\r\n//     data: {\r\n//       passwords: {\r\n//         old: passwords.oldPassword,\r\n//         new: passwords.newPassword\r\n//       }\r\n//     }\r\n//   })\r\n// }\r\n","import React, { useState } from 'react'\r\n// import { History } from 'history'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nimport { signIn } from '../api'\r\nimport { Credentials } from '../../shared/types'\r\nimport Button from 'react-bootstrap/Button'\r\nimport { updateSession } from '../../redux/system/actions'\r\nimport { ToastContainer, toast } from 'react-toastify'\r\n\r\ntype Props = {\r\n  setAlerts: any\r\n  alerts: Array<any>\r\n  setUser: any\r\n}\r\n\r\nconst SignIn: React.FC<Props> = props => {\r\n  const [email, setEmail] = useState('st@st.com')\r\n  const [password, setPassword] = useState('stst')\r\n  //const [passwordConfirmation, setPasswordConfirmation] = useState()\r\n  let history = useHistory()\r\n  const dispatch = useDispatch()\r\n\r\n  const onSignIn = (event: { preventDefault: () => void }) => {\r\n    event.preventDefault()\r\n    const credentials: Credentials = { email, password }\r\n    signIn(credentials)\r\n      .then((res: any) => {\r\n        props.setUser(res.data.user)\r\n        // dispatch(updateSession(res.data.user.token))\r\n      })\r\n      .then(() => toast.success('Welcome!'))\r\n      .then(() => {\r\n        history.push('/new-order')\r\n      })\r\n      .catch((error: any) => {\r\n        console.error(error)\r\n        toast.error('Something went wrong, please check the console.')\r\n      })\r\n  }\r\n\r\n  return (\r\n    <div className=\"col-md-6 m-auto py-3\">\r\n      <form className=\"auth-form\" onSubmit={onSignIn}>\r\n        <h3>Oturum Aç</h3>\r\n        <label htmlFor=\"email\">Email</label>\r\n        <input\r\n          required\r\n          name=\"email\"\r\n          value={email}\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n          onChange={e => setEmail(e.target.value)}\r\n        />\r\n        <label htmlFor=\"password\">Password</label>\r\n        <input\r\n          required\r\n          name=\"password\"\r\n          value={password}\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          onChange={e => setPassword(e.target.value)}\r\n        />\r\n        <Button variant=\"primary\" type=\"submit\">\r\n          Oturum Aç\r\n        </Button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\nexport default SignIn\r\n","import \"./assets/animation/styles.css\";\r\n\r\nimport React from \"react\";\r\nimport {\r\n  TransitionGroup,\r\n  CSSTransition\r\n} from \"react-transition-group\";\r\nimport {\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  useLocation,\r\n} from \"react-router-dom\";\r\nimport Services from './containers/components/Services'\r\nimport ContactUs from './containers/ContactUs'\r\nimport MainPage from \"./containers/components/MainPage\";\r\nimport SignUp from \"./auth/components/SignUp\";\r\nimport SignIn from \"./auth/components/SignIn\";\r\n\r\ninterface Props extends React.Props<any> {\r\n    to: string\r\n}\r\ntype AnimProps = {\r\n  alerts: Array<any>,\r\n  setUser: Function,\r\n  setAlerts: Function,\r\n  user: Object\r\n}\r\nfunction NavLink(props: Props) {\r\n    return (\r\n      <li style={styles.navItem}>\r\n        <Link {...props} style={{ color: \"inherit\" }} />\r\n      </li>\r\n    );\r\n  }\r\n\r\n  // export default function AnimationApp(props) {\r\n  const AnimationApp: React.FC<AnimProps> = props => {\r\n      let location = useLocation();\r\n\r\n    // const NavLink = () => (\r\n    //         <li style={styles.navItem}>\r\n    //             <Link {...props} style={{ color: \"inherit\" }} />\r\n    //         </li>\r\n    // )\r\n\r\n    return (\r\n      <div style={styles.fill}>\r\n        <ul style={styles.nav}>\r\n          {/*<NavLink to=\"/tecnical-resources\">\r\n            <div>\r\n                <h1>Teknik Bilgiler</h1>\r\n            </div>\r\n\r\n          </NavLink>\r\n          <NavLink to=\"/services\">\r\n             Services\r\n          </NavLink>\r\n          <NavLink to=\"/contact-us\">\r\n            Contact-Us\r\n    </NavLink>*/}\r\n        </ul>\r\n\r\n        <div style={styles.content}>\r\n          <TransitionGroup>\r\n            {/*\r\n              This is no different than other usage of\r\n              <CSSTransition>, just make sure to pass\r\n              `location` to `Switch` so it can match\r\n              the old location as it animates out.\r\n            */}\r\n            <CSSTransition\r\n              key={location.key}\r\n              classNames=\"fade\"\r\n              timeout={300}\r\n            >\r\n              <Switch location={location}>\r\n                <Route exact path=\"/\" children={<div style={{position: \"absolute\"}}><MainPage /></div>} />\r\n                <Route path=\"/technical-resources\" children={<h1>Teknik Bilgiler</h1>} />\r\n                <Route path=\"/services\" children={<div style={{position: \"absolute\", width: \"100vh\"}}><Services/></div>} />\r\n                <Route\r\n                  path=\"/references\"\r\n                  render={() => (\r\n                      <h1>İş Ortaklarımız</h1>\r\n                  )}\r\n                />\r\n                <Route\r\n                  path=\"/sign-up\"\r\n                  render={() => (\r\n                    <SignUp\r\n                      alerts={props.alerts}\r\n                      setAlerts={props.setAlerts}\r\n                      setUser={props.setUser}\r\n                    />\r\n                  )}\r\n                />\r\n                {!props.user ? (\r\n                  <Route\r\n                    path=\"/sign-in\"\r\n                    render={() => (\r\n                      <SignIn\r\n                        alerts={props.alerts}\r\n                        setAlerts={props.setAlerts}\r\n                        setUser={props.setUser}\r\n                      />\r\n                    )}\r\n                  />\r\n                ) : null}\r\n                <Route path=\"/contact-us\" children={<div style={{position: \"absolute\"}}><ContactUs /></div>} />\r\n              </Switch>\r\n            </CSSTransition>\r\n          </TransitionGroup>\r\n        </div>\r\n      </div>\r\n    );\r\n}\r\n\r\ninterface Stylings {\r\n    fill?: Object,\r\n    content?: Object,\r\n    nav?: Object,\r\n    navItem?: Object,\r\n    hsl?: Object,\r\n    rgb?: Object\r\n}\r\n\r\nconst styles: Stylings = {};\r\n\r\nstyles.fill = {\r\n  position: \"absolute\",\r\n  left: 0,\r\n  right: 0,\r\n  top: 100,\r\n  bottom: 0\r\n};\r\n\r\nstyles.content = {\r\n  ...styles.fill,\r\n  top: \"40px\",\r\n  textAlign: \"center\",\r\n  width: \"1200px\",\r\n  left: \"25%\"\r\n};\r\n\r\nstyles.nav = {\r\n  padding: 0,\r\n  margin: 0,\r\n  position: \"absolute\",\r\n  top: 0,\r\n  height: \"40px\",\r\n  width: \"100%\",\r\n  display: \"flex\"\r\n};\r\n\r\nstyles.navItem = {\r\n  textAlign: \"center\",\r\n  flex: 1,\r\n  listStyleType: \"none\",\r\n  padding: \"10px\"\r\n};\r\n\r\nstyles.hsl = {\r\n  ...styles.fill,\r\n  color: \"white\",\r\n  paddingTop: \"20px\",\r\n  fontSize: \"30px\"\r\n};\r\n\r\nstyles.rgb = {\r\n  ...styles.fill,\r\n  color: \"white\",\r\n  paddingTop: \"20px\",\r\n  fontSize: \"30px\"\r\n};\r\nexport default AnimationApp","import React, { useState, Suspense  } from 'react'\r\n// import logo from './logo.svg'\r\nimport './App.css'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport { BrowserRouter as Router, Switch, } from 'react-router-dom'\r\n// import SignUp from './auth/components/SignUp'\r\nimport Header from './shared/Header'\r\n// import AuthenticatedRoute from './shared/AuthenticatedRoute'\r\nimport AutoDismissAlert from './shared/autoDismissAlert'\r\nimport { AlertProps } from 'react-bootstrap/Alert'\r\n// import NewOrder from './neworder/components/NewOrder'\r\nimport { ToastContainer } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\n// import MainPage from './containers/components/MainPage'\r\nimport './i18n'\r\n// import ContactUs from './containers/ContactUs'\r\n// import Services from './containers/components/Services'\r\nimport AnimationApp from './AnimationApp'\r\nconst App: React.FC = () => {\r\n  const [user, setUser] = useState()\r\n  const [alerts, setAlerts] = useState([])\r\n\r\n  return (\r\n    <Suspense fallback={null}>\r\n    <div className=\"App\">\r\n      <main className=\"container-fluid\">\r\n        <ToastContainer />\r\n        <Router>\r\n          {/*<div>*/}\r\n            <Header user={user}></Header>\r\n            {alerts.length > 0 &&\r\n              alerts.map((alert: AlertProps, index) => (\r\n                <AutoDismissAlert\r\n                  key={index}\r\n                  dismissible\r\n                  onClose={() => setAlerts([])}\r\n                  alert={alert}\r\n                >\r\n                  <p>{alert.title}</p>\r\n                </AutoDismissAlert>\r\n              ))}\r\n            <div className={\"main-content\"}> \r\n              <Switch>\r\n                {/*<Route\r\n                  exact\r\n                  path=\"/\"\r\n                  render={() => (\r\n                      <MainPage />\r\n                  )}\r\n                />\r\n                <Route\r\n                  path=\"/technical-resources\"\r\n                  render={() => (\r\n                    <div>\r\n                      <h1>Teknik Bilgiler</h1>\r\n                    </div>\r\n                  )}\r\n                />\r\n                <Route\r\n                  path=\"/services\"\r\n                  render={() => (\r\n                  <Services/>\r\n                  )}\r\n                />\r\n                <Route\r\n                  path=\"/references\"\r\n                  render={() => (\r\n                    <div>\r\n                      <h1>İş Ortaklarımız</h1>\r\n                    </div>\r\n                  )}\r\n                />\r\n                <Route\r\n                  path=\"/contact-us\"\r\n                  render={() => (\r\n                    <ContactUs />\r\n                  )}\r\n                />\r\n                <AuthenticatedRoute\r\n                  user={user}\r\n                  exact\r\n                  path=\"/new-order\"\r\n                  render={() => (\r\n                    <NewOrder\r\n                      alerts={alerts}\r\n                      setAlerts={setAlerts}\r\n                      user={user}\r\n                    ></NewOrder>\r\n                  )}\r\n                />\r\n                <AuthenticatedRoute\r\n                  user={user}\r\n                  exact\r\n                  path=\"/change-password\"\r\n                  render={() => (\r\n                    <div>\r\n                      <h1>Under Construction</h1>\r\n                    </div>\r\n                  )}\r\n                />\r\n                <Route\r\n                  path=\"/sign-up\"\r\n                  render={() => (\r\n                    <SignUp\r\n                      alerts={alerts}\r\n                      setAlerts={setAlerts}\r\n                      setUser={setUser}\r\n                    />\r\n                  )}\r\n                />\r\n                {!user ? (\r\n                  <Route\r\n                    path=\"/sign-in\"\r\n                    render={() => (\r\n                      <SignIn\r\n                        alerts={alerts}\r\n                        setAlerts={setAlerts}\r\n                        setUser={setUser}\r\n                      />\r\n                    )}\r\n                  />\r\n                ) : null}\r\n                */}\r\n                <AnimationApp alerts={alerts} setAlerts={setAlerts} setUser={setUser} user={user}/>\r\n              </Switch>\r\n            </div>\r\n          {/*</div>*/}\r\n        </Router>\r\n      </main>\r\n    </div>\r\n    </Suspense>\r\n  )\r\n}\r\n\r\n\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","// Describing the shape of the system's slice of state\r\nexport interface SystemState {\r\n  loggedIn: boolean\r\n  session: string\r\n  userName: string\r\n}\r\n\r\n// Describing the different ACTION NAMES available\r\nexport const UPDATE_SESSION = 'UPDATE_SESSION'\r\n\r\ninterface UpdateSessionAction {\r\n  type: typeof UPDATE_SESSION\r\n  payload: SystemState\r\n}\r\n\r\nexport type SystemActionTypes = UpdateSessionAction\r\n","import { UPDATE_SESSION, SystemState, SystemActionTypes } from './types'\r\n\r\nconst initialState: SystemState = {\r\n  loggedIn: false,\r\n  session: '',\r\n  userName: ''\r\n}\r\n\r\nexport function systemReducer(\r\n  state = initialState,\r\n  action: SystemActionTypes\r\n): SystemState {\r\n  switch (action.type) {\r\n    case UPDATE_SESSION: {\r\n      return {\r\n        ...state,\r\n        ...action.payload\r\n      }\r\n    }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './App'\r\nimport * as serviceWorker from './serviceWorker'\r\nimport { Provider } from 'react-redux'\r\nimport { systemReducer } from './redux/system/reducers'\r\nimport { createStore } from 'redux'\r\n// import './i18n';\r\n\r\nconst store = createStore(systemReducer)\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.38fd4d84.png\";","module.exports = __webpack_public_path__ + \"static/media/img-1-md.ac6606d8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/img-2-md.b4f629d2.jpg\";","module.exports = __webpack_public_path__ + \"static/media/img-3-md.b3d00b85.jpg\";","module.exports = __webpack_public_path__ + \"static/media/lamp-trans-sm.33d616b5.jpg\";"],"sourceRoot":""}